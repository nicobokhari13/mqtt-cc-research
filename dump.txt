dev) devnico@carbon:~/repos/research$ bash run_prototype.sh
values = None
execute many = False
values = None
execute many = False
values = ('b8:27:eb:4f:15:95', '100', 0)
execute many = False
values = ('b8:27:eb:4f:15:95', 'sensor/humidity', 0)
execute many = False
values = ('b8:27:eb:4f:15:95', 'sensor/temperature', 0)
execute many = False
values = ('b8:27:eb:4f:15:95', 'sensor/airquality', 0)
execute many = False
values = ('a8:20:dc:2d:51:59', '95', 0)
execute many = False
values = ('a8:20:dc:2d:51:59', 'sensor/temperature', 0)
execute many = False
values = ('a8:20:dc:2d:51:59', 'sensor/airquality', 0)
execute many = False
values = ('a8:20:dc:2d:51:59', 'sensor/humidity', 0)
execute many = False
instance is None, creating new one
Starting
starting window and set gotCmdToSend = <Future pending>
in misc loop
waiting for command
gotCmdToSend = <Future pending>
waiting for time window
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in misc loop
in on_message
in new subs handler
values = None
execute many = False
Task: ('sensor/airquality', 50)
values = ('sensor/airquality',)
execute many = False
values = ('a8:20:dc:2d:51:59',)
execute many = False
a8:20:dc:2d:51:59, 95.0, 0
publishings []
values = ('b8:27:eb:4f:15:95',)
execute many = False
b8:27:eb:4f:15:95, 100.0, 0
publishings []
checking energy increase on a8:20:dc:2d:51:59 from adding 50
freqCopy = []
newTask = 50
added new task to freqCopy
calculated new min
removing 50 from freqCopy
Energy increased on a8:20:dc:2d:51:59 20
a8:20:dc:2d:51:59's energy after increase = 20
ratio of new Energy / current Battery = 0.21052631578947367
best Mac = a8:20:dc:2d:51:59
checking energy increase on b8:27:eb:4f:15:95 from adding 50
freqCopy = []
newTask = 50
added new task to freqCopy
calculated new min
removing 50 from freqCopy
Energy increased on b8:27:eb:4f:15:95 20
b8:27:eb:4f:15:95's energy after increase = 20
ratio of new Energy / current Battery = 0.2
best Mac = b8:27:eb:4f:15:95
b8:27:eb:4f:15:95 used to execute at 0
b8:27:eb:4f:15:95 now executes at 2.0
values = (2.0, 'b8:27:eb:4f:15:95')
execute many = False
Task: ('sensor/humidity', 30)
values = ('sensor/humidity',)
execute many = False
values = ('a8:20:dc:2d:51:59',)
execute many = False
a8:20:dc:2d:51:59, 95.0, 0
publishings []
values = ('b8:27:eb:4f:15:95',)
execute many = False
b8:27:eb:4f:15:95, 100.0, 2
publishings []
checking energy increase on a8:20:dc:2d:51:59 from adding 30
freqCopy = []
newTask = 30
added new task to freqCopy
calculated new min
removing 30 from freqCopy
Energy increased on a8:20:dc:2d:51:59 20
a8:20:dc:2d:51:59's energy after increase = 20
ratio of new Energy / current Battery = 0.21052631578947367
best Mac = b8:27:eb:4f:15:95
checking energy increase on b8:27:eb:4f:15:95 from adding 30
freqCopy = []
newTask = 30
added new task to freqCopy
calculated new min
removing 30 from freqCopy
Energy increased on b8:27:eb:4f:15:95 0
b8:27:eb:4f:15:95's energy after increase = 20
ratio of new Energy / current Battery = 0.2
best Mac = b8:27:eb:4f:15:95
b8:27:eb:4f:15:95 used to execute at 2
b8:27:eb:4f:15:95 now executes at 2.0
values = (2.0, 'b8:27:eb:4f:15:95')
execute many = False
Task: ('sensor/temperature', 20)
values = ('sensor/temperature',)
execute many = False
values = ('a8:20:dc:2d:51:59',)
execute many = False
a8:20:dc:2d:51:59, 95.0, 0
publishings []
values = ('b8:27:eb:4f:15:95',)
execute many = False
b8:27:eb:4f:15:95, 100.0, 2
publishings []
checking energy increase on a8:20:dc:2d:51:59 from adding 20
freqCopy = []
newTask = 20
added new task to freqCopy
calculated new min
removing 20 from freqCopy
Energy increased on a8:20:dc:2d:51:59 30
a8:20:dc:2d:51:59's energy after increase = 30
ratio of new Energy / current Battery = 0.3157894736842105
best Mac = b8:27:eb:4f:15:95
checking energy increase on b8:27:eb:4f:15:95 from adding 20
freqCopy = []
newTask = 20
added new task to freqCopy
calculated new min
removing 20 from freqCopy
Energy increased on b8:27:eb:4f:15:95 10
b8:27:eb:4f:15:95's energy after increase = 30
ratio of new Energy / current Battery = 0.3
best Mac = b8:27:eb:4f:15:95
b8:27:eb:4f:15:95 used to execute at 2
b8:27:eb:4f:15:95 now executes at 2.0
values = (2.0, 'b8:27:eb:4f:15:95')
execute many = False
assignment string = {"sensor/temperature": 20}
In update PUBLISH table: mac = b8:27:eb:4f:15:95
update_values: [('b8:27:eb:4f:15:95', 'sensor/temperature')]
values = [('b8:27:eb:4f:15:95', 'sensor/temperature')]
execute many = True
generated final command = {'b8:27:eb:4f:15:95': '{"sensor/temperature": 20}'}
before setting assignments
self.got_message = <Future pending cb=[Task.task_wakeup()]>
after setting assignments
got command
in on_message
in new subs handler
values = None
execute many = False
Task: ('sensor/airquality', 50)
values = ('sensor/airquality',)
execute many = False
values = ('a8:20:dc:2d:51:59',)
execute many = False
a8:20:dc:2d:51:59, 95.0, 0
publishings []
values = ('b8:27:eb:4f:15:95',)
execute many = False
b8:27:eb:4f:15:95, 100.0, 2
publishings [('sensor/temperature', 20)]
('sensor/temperature', 20)
checking energy increase on a8:20:dc:2d:51:59 from adding 50
freqCopy = []
newTask = 50
added new task to freqCopy
calculated new min
removing 50 from freqCopy
Energy increased on a8:20:dc:2d:51:59 20
a8:20:dc:2d:51:59's energy after increase = 20
ratio of new Energy / current Battery = 0.21052631578947367
best Mac = a8:20:dc:2d:51:59
checking energy increase on b8:27:eb:4f:15:95 from adding 50
freqCopy = [20]
newTask = 50
added new task to freqCopy
calculated new min
removing 20 from freqCopy
Energy increased on b8:27:eb:4f:15:95 30
b8:27:eb:4f:15:95's energy after increase = 50
ratio of new Energy / current Battery = 0.5
best Mac = a8:20:dc:2d:51:59
a8:20:dc:2d:51:59 used to execute at 0
a8:20:dc:2d:51:59 now executes at 2.0
values = (2.0, 'a8:20:dc:2d:51:59')
execute many = False
Task: ('sensor/humidity', 30)
values = ('sensor/humidity',)
execute many = False
values = ('a8:20:dc:2d:51:59',)
execute many = False
a8:20:dc:2d:51:59, 95.0, 2
publishings []
values = ('b8:27:eb:4f:15:95',)
execute many = False
b8:27:eb:4f:15:95, 100.0, 2
publishings [('sensor/temperature', 20)]
('sensor/temperature', 20)
checking energy increase on a8:20:dc:2d:51:59 from adding 30
freqCopy = []
newTask = 30
added new task to freqCopy
calculated new min
removing 30 from freqCopy
Energy increased on a8:20:dc:2d:51:59 0
a8:20:dc:2d:51:59's energy after increase = 20
ratio of new Energy / current Battery = 0.21052631578947367
best Mac = a8:20:dc:2d:51:59
checking energy increase on b8:27:eb:4f:15:95 from adding 30
freqCopy = [20]
newTask = 30
added new task to freqCopy
calculated new min
removing 20 from freqCopy
Energy increased on b8:27:eb:4f:15:95 30
b8:27:eb:4f:15:95's energy after increase = 50
ratio of new Energy / current Battery = 0.5
best Mac = a8:20:dc:2d:51:59
a8:20:dc:2d:51:59 used to execute at 2
a8:20:dc:2d:51:59 now executes at 2.0
values = (2.0, 'a8:20:dc:2d:51:59')
execute many = False
assignment string = {"sensor/humidity": 30}
In update PUBLISH table: mac = a8:20:dc:2d:51:59
update_values: [('a8:20:dc:2d:51:59', 'sensor/humidity')]
values = [('a8:20:dc:2d:51:59', 'sensor/humidity')]
execute many = True
assignment string = {"sensor/temperature": 20}
In update PUBLISH table: mac = b8:27:eb:4f:15:95
update_values: [('b8:27:eb:4f:15:95', 'sensor/temperature')]
values = [('b8:27:eb:4f:15:95', 'sensor/temperature')]
execute many = True
generated final command = {'a8:20:dc:2d:51:59': '{"sensor/humidity": 30}', 'b8:27:eb:4f:15:95': '{"sensor/temperature": 20}'}
before setting assignments
self.got_message = <Future finished result={'b8:27:eb:4f:15:95': '{"sensor/temperature": 20}'}>
Exception in callback AsyncioHelper.on_socket_open.<locals>.cb() at /home/devnico/repos/research/prototype/src/client/proto_asyncio.py:22
handle: <Handle AsyncioHelper.on_socket_open.<locals>.cb() at /home/devnico/repos/research/prototype/src/client/proto_asyncio.py:22>
Traceback (most recent call last):
  File "/usr/lib/python3.10/asyncio/events.py", line 80, in _run
    self._context.run(self._callback, *self._args)
  File "/home/devnico/repos/research/prototype/src/client/proto_asyncio.py", line 23, in cb
    client.loop_read()
  File "/home/devnico/repos/research/prototype/dev/lib/python3.10/site-packages/paho/mqtt/client.py", line 1556, in loop_read
    rc = self._packet_read()
  File "/home/devnico/repos/research/prototype/dev/lib/python3.10/site-packages/paho/mqtt/client.py", line 2439, in _packet_read
    rc = self._packet_handle()
  File "/home/devnico/repos/research/prototype/dev/lib/python3.10/site-packages/paho/mqtt/client.py", line 3033, in _packet_handle
    return self._handle_publish()
  File "/home/devnico/repos/research/prototype/dev/lib/python3.10/site-packages/paho/mqtt/client.py", line 3327, in _handle_publish
    self._handle_on_message(message)
  File "/home/devnico/repos/research/prototype/dev/lib/python3.10/site-packages/paho/mqtt/client.py", line 3570, in _handle_on_message
    on_message(self, self._userdata, message)
  File "/home/devnico/repos/research/prototype/src/client/proto_asyncio.py", line 107, in on_message
    self.got_message.set_result(mapAssignments)
asyncio.exceptions.InvalidStateError: invalid state
after await
the result of tasks is {'b8:27:eb:4f:15:95': '{"sensor/temperature": 20}'}
sending commands
sent to topic sensor/cmd/b8:27:eb:4f:15:95
finished sending commands
starting window and set gotCmdToSend = <Future pending>
waiting for command
gotCmdToSend = <Future pending>
waiting for time window
in misc loop
^CTraceback (most recent call last):
  File "/home/devnico/repos/research/prototype/src/client/proto_client.py", line 77, in <module>
    main()
  File "/home/devnico/repos/research/prototype/src/client/proto_client.py", line 74, in main
    run_async_client()
  File "/home/devnico/repos/research/prototype/src/client/proto_asyncio.py", line 203, in run_async_client
    loop.run_until_complete(AsyncMqtt(loop).main())
  File "/usr/lib/python3.10/asyncio/base_events.py", line 636, in run_until_complete
    self.run_forever()
  File "/usr/lib/python3.10/asyncio/base_events.py", line 603, in run_forever
    self._run_once()
  File "/usr/lib/python3.10/asyncio/base_events.py", line 1871, in _run_once
    event_list = self._selector.select(timeout)
  File "/usr/lib/python3.10/selectors.py", line 469, in select
    fd_event_list = self._selector.poll(timeout, max_ev)
KeyboardInterrupt
